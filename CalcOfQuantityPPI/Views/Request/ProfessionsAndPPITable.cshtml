@model CalcOfQuantityPPI.ViewModels.Request.RequestViewModel
<table class="table table-striped">
    <thead>
        <tr>
            <th width="200">Профессия</th>
            <th width="100">Численность</th>
            <th width="100">Наименование СИЗ</th>
            <th width="100">Количество на одного работника</th>
            <th width="100">Количество всего</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var profession in Model.ProfessionsTableViewModel.Professions)
        {
            <tr>
                <td>
                    @Html.HiddenFor(model => model.ProfessionsTableViewModel.ProfessionId, 
                        new { @Value = profession.Id })
                    @profession.Name
                </td>
                <td width="100">
                    @Html.TextBoxFor(model => Model.ProfessionsTableViewModel.QuantityOfEmployees,
                        new { id = "quantityOfEmployees", type = "number", min = "0", max = "1000", @class = "form-control" })
                </td>
                <td colspan="3">
                    <table class="table table-striped calc-table">
                        <tbody>
                            @foreach (var ppi in Model.ProfessionsTableViewModel.PPIForProfession.Where(p => p.ProfessionId == profession.Id))
                            {
                                <tr>
                                    <td>
                                        @Html.Hidden("quantityOfEmployeesHidden", "", new { @class = "quantity-of-employees" })
                                    </td>
                                    <td>
                                        @Html.HiddenFor(model => model.ProfessionsTableViewModel.PPIIdForProfession,
                                            new { @Value = Model.ProfessionsTableViewModel.PPI.FirstOrDefault(p => p.Id == ppi.PPIId).Id })
                                        @Model.ProfessionsTableViewModel.PPI.FirstOrDefault(p => p.Id == ppi.PPIId).Name
                                    </td>
                                    <td width="100">
                                        @Html.TextBoxFor(model => Model.ProfessionsTableViewModel.QuantityOfPPIForOneEmployee,
                                            new { type = "number", min = "0", max = "1000", @class = "form-control quantity-of-ppi-for-one-employee" })
                                    </td>
                                    <td width="100">
                                        @Html.TextBoxFor(model => Model.ProfessionsTableViewModel.TotalQuantityOfPPI,
                                            new { type = "text", @readonly= "readonly", @class = "form-control total-quantity-of-ppi" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(function () {
        calculateTotalQuantity();
    });
    $('input').bind('input', function () {
        $(this).closest('tr').find('input').each(function (i) {
            var numberInProfession = $(this).closest('tr').find('input[id=quantityOfEmployees]').val();
            if (isNaN(numberInProfession) || numberInProfession === undefined) {
                return;
            }
            $(this).closest('tr').find('input.quantity-of-employees').val(numberInProfession);
        });
        calculateTotalQuantity();
    });
    function calculateTotalQuantity() {
        $('.calc-table tr').each(function () {
            var hours = $(this).find('input.quantity-of-employees').val();
            var rate = $(this).find('input.quantity-of-ppi-for-one-employee').val();
            $(this).find('input.total-quantity-of-ppi').val(hours * rate);
        });
        return false;
    }
</script>